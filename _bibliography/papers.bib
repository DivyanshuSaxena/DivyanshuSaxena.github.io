@inproceedings{Medes,
bibtex_show = {true},
author = {Divyanshu Saxena and Tao Ji and Arjun Singhvi and Junaid Khalid and Aditya
Akella},
title = {Memory Deduplication for Serverless Computing with Medes.},
booktitle={EuroSys '22: Proceedings of the Seventeenth European Conference on Computer Systems},
year = {2022},
isbn = {9781450391627},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
abstract = {Serverless platforms today impose rigid trade-offs between
resource use and user-perceived performance. Limited controls, provided via toggling sandboxes between warm and
cold states and keep-alives, force operators to sacrifice significant resources to achieve good performance. We present a
serverless framework, Medes, that breaks the rigid trade-off
and allows operators to navigate the trade-off space smoothly.
Medes leverages the fact that the warm sandboxes running
on serverless platforms have a high fraction of duplication in
their memory footprints. We exploit these redundant chunks
to develop a new sandbox state, called a dedup state, that
is more memory-efficient than the warm state and faster to
restore from than the cold state. We develop novel mechanisms to identify memory redundancy at minimal overhead
while ensuring that the dedup containers' memory footprint
is small. Finally, we develop a simple sandbox management
policy that exposes a narrow, intuitive interface for operators
to trade-off performance for memory by jointly controlling
warm and dedup sandboxes. Detailed experiments with a
prototype using real-world serverless workloads demonstrate
that Medes can provide up to 1X-2.75X improvements in the
end-to-end latencies. The benefits of Medes are enhanced in
memory pressure situations, where Medes can provide up to
3.8X improvements in end-to-end latencies. Medes achieves
this by reducing the number of cold starts incurred by 10-50%
against the state-of-the-art baselines.},
url = {https://doi.org/10.1145/3492321.3524272},
doi = {10.1145/3492321.3524272},
location = {Rennes, France},
abbr = {EuroSys '22}
}